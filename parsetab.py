
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEleftANDORleftEQEQNEQGTLTGEQLEQAND COLON COMMA DIVIDE ELSE EQEQ EQUALS FALSE FLOAT FOR GEQ GT ID IF IN LBRACE LEQ LPAREN LT MINUS NEQ NEWLINE NUMBER OR PLUS PRINT RANGE RBRACE RPAREN STRING TIMES TRUEprogram : statement_liststatement_list : statement\n                      | statement_list statementblock : LBRACE statement_list RBRACE\n             | LBRACE RBRACEstatement : ID EQUALS exprstatement : PRINT LPAREN expr RPARENstatement : IF expr COLON blockstatement : IF expr COLON block ELSE COLON blockstatement : FOR ID IN RANGE LPAREN expr RPAREN COLON blockexpr : expr EQEQ expr\n            | expr NEQ expr\n            | expr GT expr\n            | expr LT expr\n            | expr GEQ expr\n            | expr LEQ exprexpr : expr AND expr\n            | expr OR exprexpr : expr PLUS expr\n            | expr MINUS expr\n            | expr TIMES expr\n            | expr DIVIDE exprexpr : NUMBERexpr : FLOATexpr : IDexpr : STRINGexpr : TRUEexpr : FALSEexpr : LPAREN expr RPARENexpr : expr COMMA expr'
    
_lr_action_items = {'ID':([0,2,3,6,7,8,9,10,12,13,14,15,16,17,18,20,23,24,25,26,27,28,29,30,31,32,33,34,35,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,59,61,63,66,],[4,4,-2,14,19,-3,14,14,-23,-24,-25,-26,-27,-28,14,-6,14,14,14,14,14,14,14,14,14,14,14,14,14,-7,-8,4,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-30,-29,4,-5,14,-4,-9,-10,]),'PRINT':([0,2,3,8,12,13,14,15,16,17,20,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,61,63,66,],[5,5,-2,-3,-23,-24,-25,-26,-27,-28,-6,-7,-8,5,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-30,-29,5,-5,-4,-9,-10,]),'IF':([0,2,3,8,12,13,14,15,16,17,20,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,61,63,66,],[6,6,-2,-3,-23,-24,-25,-26,-27,-28,-6,-7,-8,6,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-30,-29,6,-5,-4,-9,-10,]),'FOR':([0,2,3,8,12,13,14,15,16,17,20,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,61,63,66,],[7,7,-2,-3,-23,-24,-25,-26,-27,-28,-6,-7,-8,7,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-30,-29,7,-5,-4,-9,-10,]),'$end':([1,2,3,8,12,13,14,15,16,17,20,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,58,61,63,66,],[0,-1,-2,-3,-23,-24,-25,-26,-27,-28,-6,-7,-8,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-30,-29,-5,-4,-9,-10,]),'RBRACE':([3,8,12,13,14,15,16,17,20,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,57,58,61,63,66,],[-2,-3,-23,-24,-25,-26,-27,-28,-6,-7,-8,58,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-30,-29,61,-5,-4,-9,-10,]),'EQUALS':([4,],[9,]),'LPAREN':([5,6,9,10,18,23,24,25,26,27,28,29,30,31,32,33,34,35,55,59,],[10,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,59,18,]),'NUMBER':([6,9,10,18,23,24,25,26,27,28,29,30,31,32,33,34,35,59,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'FLOAT':([6,9,10,18,23,24,25,26,27,28,29,30,31,32,33,34,35,59,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'STRING':([6,9,10,18,23,24,25,26,27,28,29,30,31,32,33,34,35,59,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'TRUE':([6,9,10,18,23,24,25,26,27,28,29,30,31,32,33,34,35,59,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'FALSE':([6,9,10,18,23,24,25,26,27,28,29,30,31,32,33,34,35,59,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'COLON':([11,12,13,14,15,16,17,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,64,],[22,-23,-24,-25,-26,-27,-28,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-30,-29,60,65,]),'EQEQ':([11,12,13,14,15,16,17,20,21,36,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,],[23,-23,-24,-25,-26,-27,-28,23,23,23,-11,-12,-13,-14,-15,-16,23,23,23,23,23,23,23,-29,23,]),'NEQ':([11,12,13,14,15,16,17,20,21,36,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,],[24,-23,-24,-25,-26,-27,-28,24,24,24,-11,-12,-13,-14,-15,-16,24,24,24,24,24,24,24,-29,24,]),'GT':([11,12,13,14,15,16,17,20,21,36,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,],[25,-23,-24,-25,-26,-27,-28,25,25,25,-11,-12,-13,-14,-15,-16,25,25,25,25,25,25,25,-29,25,]),'LT':([11,12,13,14,15,16,17,20,21,36,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,],[26,-23,-24,-25,-26,-27,-28,26,26,26,-11,-12,-13,-14,-15,-16,26,26,26,26,26,26,26,-29,26,]),'GEQ':([11,12,13,14,15,16,17,20,21,36,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,],[27,-23,-24,-25,-26,-27,-28,27,27,27,-11,-12,-13,-14,-15,-16,27,27,27,27,27,27,27,-29,27,]),'LEQ':([11,12,13,14,15,16,17,20,21,36,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,],[28,-23,-24,-25,-26,-27,-28,28,28,28,-11,-12,-13,-14,-15,-16,28,28,28,28,28,28,28,-29,28,]),'AND':([11,12,13,14,15,16,17,20,21,36,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,],[29,-23,-24,-25,-26,-27,-28,29,29,29,-11,-12,-13,-14,-15,-16,-17,-18,29,29,29,29,29,-29,29,]),'OR':([11,12,13,14,15,16,17,20,21,36,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,],[30,-23,-24,-25,-26,-27,-28,30,30,30,-11,-12,-13,-14,-15,-16,-17,-18,30,30,30,30,30,-29,30,]),'PLUS':([11,12,13,14,15,16,17,20,21,36,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,],[31,-23,-24,-25,-26,-27,-28,31,31,31,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,31,-29,31,]),'MINUS':([11,12,13,14,15,16,17,20,21,36,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,],[32,-23,-24,-25,-26,-27,-28,32,32,32,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,32,-29,32,]),'TIMES':([11,12,13,14,15,16,17,20,21,36,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,],[33,-23,-24,-25,-26,-27,-28,33,33,33,-11,-12,-13,-14,-15,-16,-17,-18,33,33,-21,-22,33,-29,33,]),'DIVIDE':([11,12,13,14,15,16,17,20,21,36,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,],[34,-23,-24,-25,-26,-27,-28,34,34,34,-11,-12,-13,-14,-15,-16,-17,-18,34,34,-21,-22,34,-29,34,]),'COMMA':([11,12,13,14,15,16,17,20,21,36,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,],[35,-23,-24,-25,-26,-27,-28,35,35,35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,35,-29,35,]),'RPAREN':([12,13,14,15,16,17,21,36,41,42,43,44,45,46,47,48,49,50,51,52,53,54,62,],[-23,-24,-25,-26,-27,-28,38,54,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-30,-29,64,]),'IN':([19,],[37,]),'LBRACE':([22,60,65,],[40,40,40,]),'RANGE':([37,],[55,]),'ELSE':([39,58,61,],[56,-5,-4,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,40,],[2,57,]),'statement':([0,2,40,57,],[3,8,3,8,]),'expr':([6,9,10,18,23,24,25,26,27,28,29,30,31,32,33,34,35,59,],[11,20,21,36,41,42,43,44,45,46,47,48,49,50,51,52,53,62,]),'block':([22,60,65,],[39,63,66,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',144),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',148),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',149),
  ('block -> LBRACE statement_list RBRACE','block',3,'p_block','parser.py',156),
  ('block -> LBRACE RBRACE','block',2,'p_block','parser.py',157),
  ('statement -> ID EQUALS expr','statement',3,'p_statement_assign','parser.py',164),
  ('statement -> PRINT LPAREN expr RPAREN','statement',4,'p_statement_print','parser.py',168),
  ('statement -> IF expr COLON block','statement',4,'p_statement_if','parser.py',172),
  ('statement -> IF expr COLON block ELSE COLON block','statement',7,'p_statement_if_else','parser.py',176),
  ('statement -> FOR ID IN RANGE LPAREN expr RPAREN COLON block','statement',9,'p_statement_for','parser.py',180),
  ('expr -> expr EQEQ expr','expr',3,'p_expr_comparison','parser.py',185),
  ('expr -> expr NEQ expr','expr',3,'p_expr_comparison','parser.py',186),
  ('expr -> expr GT expr','expr',3,'p_expr_comparison','parser.py',187),
  ('expr -> expr LT expr','expr',3,'p_expr_comparison','parser.py',188),
  ('expr -> expr GEQ expr','expr',3,'p_expr_comparison','parser.py',189),
  ('expr -> expr LEQ expr','expr',3,'p_expr_comparison','parser.py',190),
  ('expr -> expr AND expr','expr',3,'p_expr_logical','parser.py',195),
  ('expr -> expr OR expr','expr',3,'p_expr_logical','parser.py',196),
  ('expr -> expr PLUS expr','expr',3,'p_expr_binop','parser.py',201),
  ('expr -> expr MINUS expr','expr',3,'p_expr_binop','parser.py',202),
  ('expr -> expr TIMES expr','expr',3,'p_expr_binop','parser.py',203),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_binop','parser.py',204),
  ('expr -> NUMBER','expr',1,'p_expr_number','parser.py',208),
  ('expr -> FLOAT','expr',1,'p_expr_float','parser.py',212),
  ('expr -> ID','expr',1,'p_expr_id','parser.py',216),
  ('expr -> STRING','expr',1,'p_expr_string','parser.py',220),
  ('expr -> TRUE','expr',1,'p_expr_true','parser.py',225),
  ('expr -> FALSE','expr',1,'p_expr_false','parser.py',229),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr_parens','parser.py',233),
  ('expr -> expr COMMA expr','expr',3,'p_expr_comma','parser.py',237),
]
